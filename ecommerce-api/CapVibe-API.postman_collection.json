{
  "info": {
    "name": "CapVibe API - E-commerce",
    "description": "Colecci√≥n completa de endpoints para la API de CapVibe - E-commerce de gorras deportivas",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.test('User registered successfully', function () {",
                  "        pm.expect(response).to.have.property('token');",
                  "        pm.expect(response).to.have.property('user');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Juan P√©rez\",\n    \"email\": \"juan@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Register Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('admin_token', response.token);",
                  "    pm.test('Admin registered successfully', function () {",
                  "        pm.expect(response).to.have.property('token');",
                  "        pm.expect(response.user.role).to.eql('admin');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Admin CapVibe\",\n    \"email\": \"admin@capvibe.com\",\n    \"password\": \"admin123\",\n    \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(response).to.have.property('token');",
                  "        pm.expect(response.message).to.eql('Login exitoso');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"juan@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('admin_token', response.token);",
                  "    pm.test('Admin login successful', function () {",
                  "        pm.expect(response).to.have.property('token');",
                  "        pm.expect(response.user.role).to.eql('admin');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@capvibe.com\",\n    \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "üìÅ Categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            }
          }
        },
        {
          "name": "Get Category by ID",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["categories", "{{category_id}}"]
            }
          }
        },
        {
          "name": "Create Category (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('category_id', response._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Gorras Test\",\n    \"description\": \"Categor√≠a de prueba para testing\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            }
          }
        },
        {
          "name": "Update Category (Admin)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Gorras Test Updated\",\n    \"description\": \"Categor√≠a actualizada para testing\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["categories", "{{category_id}}"]
            }
          }
        },
        {
          "name": "Delete Category (Admin)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["categories", "{{category_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üì¶ Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/products?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          }
        },
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('product_id', response._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Gorra Test Lakers\",\n    \"description\": \"Gorra de prueba de los Lakers\",\n    \"price\": 899,\n    \"stock\": 15,\n    \"category\": \"{{category_id}}\",\n    \"brand\": \"New Era\",\n    \"size\": \"Ajustable\",\n    \"color\": \"Morado y amarillo\",\n    \"material\": \"Algod√≥n 100%\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/products",
              "host": ["{{base_url}}"],
              "path": ["products"]
            }
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Gorra Test Lakers Updated\",\n    \"price\": 999,\n    \"stock\": 20\n}"
            },
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Users",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            }
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Juan Carlos P√©rez\",\n    \"email\": \"juancarlos@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            }
          }
        },
        {
          "name": "Get All Users (Admin)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            }
          }
        }
      ]
    },
    {
      "name": "üõí Cart",
      "item": [
        {
          "name": "Get Cart",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/cart",
              "host": ["{{base_url}}"],
              "path": ["cart"]
            }
          }
        },
        {
          "name": "Add to Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"productId\": \"{{product_id}}\",\n    \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/add",
              "host": ["{{base_url}}"],
              "path": ["cart", "add"]
            }
          }
        },
        {
          "name": "Update Cart Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"quantity\": 3\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/update/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "update", "{{product_id}}"]
            }
          }
        },
        {
          "name": "Remove from Cart",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/cart/remove/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "remove", "{{product_id}}"]
            }
          }
        },
        {
          "name": "Clear Cart",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/cart/clear",
              "host": ["{{base_url}}"],
              "path": ["cart", "clear"]
            }
          }
        }
      ]
    },
    {
      "name": "üìç Shipping Addresses",
      "item": [
        {
          "name": "Get Shipping Addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/shipping-addresses",
              "host": ["{{base_url}}"],
              "path": ["shipping-addresses"]
            }
          }
        },
        {
          "name": "Create Shipping Address",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('shipping_address_id', response._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"nombre\": \"Casa\",\n    \"calle\": \"Av. Insurgentes 123, Col. Roma\",\n    \"ciudad\": \"Ciudad de M√©xico\",\n    \"estado\": \"CDMX\",\n    \"codigoPostal\": \"06700\",\n    \"pais\": \"M√©xico\",\n    \"esPorDefecto\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/shipping-addresses",
              "host": ["{{base_url}}"],
              "path": ["shipping-addresses"]
            }
          }
        },
        {
          "name": "Get Shipping Address by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/shipping-addresses/{{shipping_address_id}}",
              "host": ["{{base_url}}"],
              "path": ["shipping-addresses", "{{shipping_address_id}}"]
            }
          }
        },
        {
          "name": "Update Shipping Address",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"nombre\": \"Casa Principal\",\n    \"calle\": \"Av. Insurgentes 456, Col. Roma Norte\",\n    \"esPorDefecto\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/shipping-addresses/{{shipping_address_id}}",
              "host": ["{{base_url}}"],
              "path": ["shipping-addresses", "{{shipping_address_id}}"]
            }
          }
        },
        {
          "name": "Delete Shipping Address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/shipping-addresses/{{shipping_address_id}}",
              "host": ["{{base_url}}"],
              "path": ["shipping-addresses", "{{shipping_address_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üí≥ Payment Methods",
      "item": [
        {
          "name": "Get Payment Methods",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/payment-methods",
              "host": ["{{base_url}}"],
              "path": ["payment-methods"]
            }
          }
        },
        {
          "name": "Create Payment Method",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('payment_method_id', response._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tipo\": \"tarjeta_credito\",\n    \"nombre\": \"Visa Principal\",\n    \"nombreTitular\": \"Juan P√©rez\",\n    \"esPorDefecto\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/payment-methods",
              "host": ["{{base_url}}"],
              "path": ["payment-methods"]
            }
          }
        },
        {
          "name": "Get Payment Method by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/payment-methods/{{payment_method_id}}",
              "host": ["{{base_url}}"],
              "path": ["payment-methods", "{{payment_method_id}}"]
            }
          }
        },
        {
          "name": "Update Payment Method",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"nombre\": \"Visa Principal Actualizada\",\n    \"nombreTitular\": \"Juan Carlos P√©rez\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/payment-methods/{{payment_method_id}}",
              "host": ["{{base_url}}"],
              "path": ["payment-methods", "{{payment_method_id}}"]
            }
          }
        },
        {
          "name": "Delete Payment Method",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/payment-methods/{{payment_method_id}}",
              "host": ["{{base_url}}"],
              "path": ["payment-methods", "{{payment_method_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üìã Orders",
      "item": [
        {
          "name": "Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('order_id', response.order._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"direccionEnvio\": {\n        \"calle\": \"Av. Insurgentes 123\",\n        \"ciudad\": \"Ciudad de M√©xico\",\n        \"estado\": \"CDMX\",\n        \"codigoPostal\": \"06700\",\n        \"pais\": \"M√©xico\"\n    },\n    \"metodoPago\": \"tarjeta_credito\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "Get My Orders",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/orders/my-orders?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["orders", "my-orders"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}"]
            }
          }
        },
        {
          "name": "Get All Orders (Admin)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/orders?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["orders"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Update Order Status (Admin)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"enviado\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}", "status"]
            }
          }
        }
      ]
    },
    {
      "name": "üß™ Test Scenarios",
      "item": [
        {
          "name": "Complete Purchase Flow",
          "item": [
            {
              "name": "1. Register & Login",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test User Complete Flow\",\n    \"email\": \"flow@test.com\",\n    \"password\": \"test123\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/register",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "register"]
                }
              }
            },
            {
              "name": "2. Browse Products",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "url": {
                  "raw": "{{base_url}}/products",
                  "host": ["{{base_url}}"],
                  "path": ["products"]
                }
              }
            },
            {
              "name": "3. Add to Cart",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"productId\": \"{{product_id}}\",\n    \"quantity\": 1\n}"
                },
                "url": {
                  "raw": "{{base_url}}/cart/add",
                  "host": ["{{base_url}}"],
                  "path": ["cart", "add"]
                }
              }
            },
            {
              "name": "4. Create Shipping Address",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nombre\": \"Test Address\",\n    \"calle\": \"Test Street 123\",\n    \"ciudad\": \"Test City\",\n    \"estado\": \"Test State\",\n    \"codigoPostal\": \"12345\",\n    \"esPorDefecto\": true\n}"
                },
                "url": {
                  "raw": "{{base_url}}/shipping-addresses",
                  "host": ["{{base_url}}"],
                  "path": ["shipping-addresses"]
                }
              }
            },
            {
              "name": "5. Create Order",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"direccionEnvio\": {\n        \"calle\": \"Test Street 123\",\n        \"ciudad\": \"Test City\",\n        \"estado\": \"Test State\",\n        \"codigoPostal\": \"12345\"\n    }\n}"
                },
                "url": {
                  "raw": "{{base_url}}/orders",
                  "host": ["{{base_url}}"],
                  "path": ["orders"]
                }
              }
            }
          ]
        },
        {
          "name": "Error Scenarios",
          "item": [
            {
              "name": "Invalid Login",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"invalid@email.com\",\n    \"password\": \"wrongpassword\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/login",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "login"]
                }
              }
            },
            {
              "name": "Access Without Token",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "url": {
                  "raw": "{{base_url}}/users/profile",
                  "host": ["{{base_url}}"],
                  "path": ["users", "profile"]
                }
              }
            },
            {
              "name": "Invalid Product ID",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "url": {
                  "raw": "{{base_url}}/products/invalid-id",
                  "host": ["{{base_url}}"],
                  "path": ["products", "invalid-id"]
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
